name: Release
on: [push]
env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: .
  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release
jobs:
  build:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    - name: Add MSBuild to PATH.
      uses: microsoft/setup-msbuild@v1.0.3
    - name: Build
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.SOLUTION_FILE_PATH}}
    - uses: actions/upload-artifact@v2
      with:
        name: ODTKRA.exe
        path: D:\a\ODTKRA\ODTKRA\x64\Release\ODTKRA.exe
        retention-days: 1
  release:
    name: "Prelease"
    needs: build
    runs-on: ubuntu-latest
    steps:
      # We don't need the repo, grab all artifacts from the build stage
      # The plugin puts each artifact in a folder of `artifactname`
      - uses: actions/download-artifact@v2
      - name: Display fetched artifacts
        run: ls -R
      - name: Emit a Github Release
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: true
          title: "Automated push build"
          files: |
            ODTKRA.exe